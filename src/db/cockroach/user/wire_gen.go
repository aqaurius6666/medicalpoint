// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package user

import (
	"context"
	"github.com/medicalpoint/gateway/src/db/interface/user"
	"github.com/sirupsen/logrus"
	"github.com/sonntuet1997/medical-chain-utils/cockroach"
	"github.com/sonntuet1997/medical-chain-utils/common"
	"gorm.io/gorm"
)

// Injectors from user.wire.cdb.go:

func InitUserCDBRepo(ctx context.Context, logger *logrus.Logger, db *gorm.DB) (*UserCDBRepo, error) {
	dbInterfaces := _wireDBInterfacesValue
	cdbRepo, err := cockroach.InitCDBRepo(ctx, logger, db, dbInterfaces)
	if err != nil {
		return nil, err
	}
	userCDBRepo := &UserCDBRepo{
		CDBRepo: cdbRepo,
	}
	return userCDBRepo, nil
}

var (
	_wireDBInterfacesValue = cockroach.DBInterfaces{&user.User{}}
)

func InitUserCDBMockRepo(ctx context.Context, dsn string) (*UserCDBRepo, error) {
	logger := common.InitLoggerWithoutCLIContext()
	db, err := cockroach.NewCDBConnection(dsn)
	if err != nil {
		return nil, err
	}
	userCDBRepo, err := InitUserCDBRepo(ctx, logger, db)
	if err != nil {
		return nil, err
	}
	return userCDBRepo, nil
}
